Initializing Mon Feb  5 10:20:10 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m 4.1  - Ensure a user for the container has been created
[1;34m[INFO][0m      * No containers running
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;34m[INFO][0m      * No containers running, skipping Section 5


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 3 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 1 containers, with 0 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 73
[1;34m[INFO][0m Score: 11
Initializing Mon Feb  5 16:43:41 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m 4.1  - Ensure a user for the container has been created
[1;34m[INFO][0m      * No containers running
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;34m[INFO][0m      * No containers running, skipping Section 5


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 3 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 1 containers, with 0 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 73
[1;34m[INFO][0m Score: 11
Initializing Mon Feb  5 16:47:00 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m 4.1  - Ensure a user for the container has been created
[1;34m[INFO][0m      * No containers running
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;34m[INFO][0m      * No containers running, skipping Section 5


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 3 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 1 containers, with 0 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 73
[1;34m[INFO][0m Score: 11
Initializing Mon Feb  5 17:08:30 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root: keen_volhard
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: keen_volhard
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: keen_volhard
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: keen_volhard
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: keen_volhard
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: keen_volhard
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: keen_volhard
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: keen_volhard
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: keen_volhard
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: keen_volhard
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: keen_volhard
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 2 containers, with 1 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 104
[1;34m[INFO][0m Score: 16
Initializing Mon Feb  5 20:31:40 CET 2018

Initializing Mon Feb  5 20:32:12 CET 2018

Initializing Mon Feb  5 20:33:33 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root: keen_volhard
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: keen_volhard
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: keen_volhard
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: keen_volhard
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: keen_volhard
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: keen_volhard
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: keen_volhard
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: keen_volhard
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: keen_volhard
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: keen_volhard
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: keen_volhard
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 2 containers, with 1 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 104
[1;34m[INFO][0m Score: 16
Initializing Thu Feb  8 12:21:12 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m 
[1;34m[INFO][0m      * No containers running
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;34m[INFO][0m      * No containers running, skipping Section 5


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 2 containers, with 0 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 70
[1;34m[INFO][0m Score: 10
Initializing Thu Feb  8 12:22:32 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root: happy_haibt
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: happy_haibt
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: happy_haibt
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: happy_haibt
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: happy_haibt
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: happy_haibt
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: happy_haibt
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: happy_haibt
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: happy_haibt
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: happy_haibt
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: happy_haibt
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 4 containers, with 1 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 104
[1;34m[INFO][0m Score: 16
Initializing Thu Feb  8 12:24:15 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root: youthful_carson
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;31m[WARN][0m      * Running as root: clever_bardeen
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 15
Initializing Thu Feb  8 12:31:36 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m youthful_carson
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root: youthful_carson
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m clever_bardeen
[1;31m[WARN][0m      * Running as root: clever_bardeen
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 15
Initializing Thu Feb  8 13:02:44 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m youthful_carson
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;34m[INFO][0m clever_bardeen
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 15
Initializing Thu Feb  8 13:03:32 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m youthful_carson
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m clever_bardeen
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 15
Initializing Thu Feb  8 13:04:40 CET 2018

Initializing Thu Feb  8 13:04:43 CET 2018

Initializing Thu Feb  8 13:05:11 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m youthful_carson
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m clever_bardeen
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 15
Initializing Thu Feb  8 13:07:02 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m youthful_carson
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;32m[PASS][0m 4.1  - Ensure a user for the container has been created
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m clever_bardeen
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;32m[PASS][0m 4.1  - Ensure a user for the container has been created
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;31m[WARN][0m 4.6  - Ensure HEALTHCHECK instructions have been added to the container image
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: youthful_carson
[1;31m[WARN][0m      * No SecurityOptions Found: clever_bardeen
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without memory restrictions: clever_bardeen
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: youthful_carson
[1;31m[WARN][0m      * Container running without CPU restrictions: clever_bardeen
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: youthful_carson
[1;31m[WARN][0m      * Container running with root FS mounted R/W: clever_bardeen
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: youthful_carson
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: clever_bardeen
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: youthful_carson
[1;34m[INFO][0m      * Container no default ulimit override: clever_bardeen
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: youthful_carson
[1;31m[WARN][0m      * Privileges not restricted: clever_bardeen
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: youthful_carson
[1;31m[WARN][0m      * Health check not set: clever_bardeen
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: youthful_carson
[1;31m[WARN][0m      * PIDs limit not set: clever_bardeen
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: youthful_carson
[1;34m[INFO][0m      * Container in docker0 network: clever_bardeen
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 6 containers, with 2 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 107
[1;34m[INFO][0m Score: 19
Initializing Thu Feb  8 14:32:41 CET 2018


[1;34m[INFO][0m 1 - Host Configuration
[1;31m[WARN][0m 1.1  - Ensure a separate partition for containers has been created
[1;33m[NOTE][0m 1.2  - Ensure the container host has been Hardened
[1;34m[INFO][0m 1.3  - Ensure Docker is up to date
[1;34m[INFO][0m      * Using 17.12.0, verify is it up to date as deemed necessary
[1;34m[INFO][0m      * Your operating system vendor may provide support and security maintenance for Docker
[1;34m[INFO][0m 1.4  - Ensure only trusted users are allowed to control Docker daemon
[1;34m[INFO][0m      * docker:x:999:
[1;31m[WARN][0m 1.5  - Ensure auditing is configured for the Docker daemon
[1;31m[WARN][0m 1.6  - Ensure auditing is configured for Docker files and directories - /var/lib/docker
[1;31m[WARN][0m 1.7  - Ensure auditing is configured for Docker files and directories - /etc/docker
[1;31m[WARN][0m 1.8  - Ensure auditing is configured for Docker files and directories - docker.service
[1;31m[WARN][0m 1.9  - Ensure auditing is configured for Docker files and directories - docker.socket
[1;31m[WARN][0m 1.10 - Ensure auditing is configured for Docker files and directories - /etc/default/docker
[1;34m[INFO][0m 1.11 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json
[1;34m[INFO][0m      * File not found
[1;31m[WARN][0m 1.12 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-containerd
[1;31m[WARN][0m 1.13 - Ensure auditing is configured for Docker files and directories - /usr/bin/docker-runc


[1;34m[INFO][0m 2 - Docker daemon configuration
[1;31m[WARN][0m 2.1  - Ensure network traffic is restricted between containers on the default bridge
[1;32m[PASS][0m 2.2  - Ensure the logging level is set to 'info'
[1;32m[PASS][0m 2.3  - Ensure Docker is allowed to make changes to iptables
[1;32m[PASS][0m 2.4  - Ensure insecure registries are not used
[1;32m[PASS][0m 2.5  - Ensure aufs storage driver is not used
[1;34m[INFO][0m 2.6  - Ensure TLS authentication for Docker daemon is configured
[1;34m[INFO][0m      * Docker daemon not listening on TCP
[1;34m[INFO][0m 2.7  - Ensure the default ulimit is configured appropriately
[1;34m[INFO][0m      * Default ulimit doesn't appear to be set
[1;31m[WARN][0m 2.8  - Enable user namespace support
[1;32m[PASS][0m 2.9  - Ensure the default cgroup usage has been confirmed
[1;32m[PASS][0m 2.10 - Ensure base device size is not changed until needed
[1;31m[WARN][0m 2.11 - Ensure that authorization for Docker client commands is enabled
[1;31m[WARN][0m 2.12 - Ensure centralized and remote logging is configured
[1;31m[WARN][0m 2.13 - Ensure operations on legacy registry (v1) are Disabled
[1;31m[WARN][0m 2.14 - Ensure live restore is Enabled
[1;31m[WARN][0m 2.15 - Ensure Userland Proxy is Disabled
[1;32m[PASS][0m 2.16 - Ensure daemon-wide custom seccomp profile is applied, if needed
[1;32m[PASS][0m 2.17 - Ensure experimental features are avoided in production
[1;32m[PASS][0m 2.18 - Ensure containers are restricted from acquiring new privileges


[1;34m[INFO][0m 3 - Docker daemon configuration files
[1;32m[PASS][0m 3.1  - Ensure that docker.service file ownership is set to root:root
[1;32m[PASS][0m 3.2  - Ensure that docker.service file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.3  - Ensure that docker.socket file ownership is set to root:root
[1;32m[PASS][0m 3.4  - Ensure that docker.socket file permissions are set to 644 or more restrictive
[1;32m[PASS][0m 3.5  - Ensure that /etc/docker directory ownership is set to root:root
[1;32m[PASS][0m 3.6  - Ensure that /etc/docker directory permissions are set to 755 or more restrictive
[1;34m[INFO][0m 3.7  - Ensure that registry certificate file ownership is set to root:root
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.8  - Ensure that registry certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * Directory not found
[1;34m[INFO][0m 3.9  - Ensure that TLS CA certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS CA certificate found
[1;34m[INFO][0m 3.11 - Ensure that Docker server certificate file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive
[1;34m[INFO][0m      * No TLS Server certificate found
[1;34m[INFO][0m 3.13 - Ensure that Docker server certificate key file ownership is set to root:root
[1;34m[INFO][0m      * No TLS Key found
[1;34m[INFO][0m 3.14 - Ensure that Docker server certificate key file permissions are set to 400
[1;34m[INFO][0m      * No TLS Key found
[1;32m[PASS][0m 3.15 - Ensure that Docker socket file ownership is set to root:docker
[1;32m[PASS][0m 3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive
[1;34m[INFO][0m 3.17 - Ensure that daemon.json file ownership is set to root:root
[1;34m[INFO][0m      * File not found
[1;34m[INFO][0m 3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive
[1;34m[INFO][0m      * File not found
[1;32m[PASS][0m 3.19 - Ensure that /etc/default/docker file ownership is set to root:root
[1;32m[PASS][0m 3.20 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive


[1;34m[INFO][0m 4 - Container Images and Build File
[1;34m[INFO][0m suspicious_neumann
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m musing_aryabhata
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;34m[INFO][0m silly_saha
[1;31m[WARN][0m 4.1  - Ensure a user for the container has been created
[1;31m[WARN][0m      * Running as root
[1;33m[NOTE][0m 4.2  - Ensure that containers use trusted base images
[1;33m[NOTE][0m 4.3  - Ensure unnecessary packages are not installed in the container
[1;33m[NOTE][0m 4.4  - Ensure images are scanned and rebuilt to include security patches
[1;31m[WARN][0m 4.5  - Ensure Content trust for Docker is Enabled
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [docker-bench-security:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed
[1;31m[WARN][0m      * No Healthcheck found: [alpine:3.7]
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [alpine:3.7]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed
[1;31m[WARN][0m      * No Healthcheck found: [postgres:latest]
[1;34m[INFO][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;34m[INFO][0m      * Update instruction found: [postgres:latest]
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;34m[INFO][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;34m[INFO][0m      * ADD in image history: [postgres:latest]
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed
[1;31m[WARN][0m      * No Healthcheck found: [hello-world:latest]
[1;32m[PASS][0m 4.7  - Ensure update instructions are not use alone in the Dockerfile
[1;33m[NOTE][0m 4.8  - Ensure setuid and setgid permissions are removed in the images
[1;32m[PASS][0m 4.9  - Ensure COPY is used instead of ADD in Dockerfile
[1;33m[NOTE][0m 4.10 - Ensure secrets are not stored in Dockerfiles
[1;33m[NOTE][0m 4.11 - Ensure verified packages are only Installed


[1;34m[INFO][0m 5  - Container Runtime
[1;32m[PASS][0m 5.1  - Ensure AppArmor Profile is Enabled
[1;31m[WARN][0m 5.2  - Ensure SELinux security options are set, if applicable
[1;31m[WARN][0m      * No SecurityOptions Found: suspicious_neumann
[1;31m[WARN][0m      * No SecurityOptions Found: musing_aryabhata
[1;31m[WARN][0m      * No SecurityOptions Found: silly_saha
[1;32m[PASS][0m 5.3  - Ensure Linux Kernel Capabilities are restricted within containers
[1;32m[PASS][0m 5.4  - Ensure privileged containers are not used
[1;32m[PASS][0m 5.5  - Ensure sensitive host system directories are not mounted on containers
[1;32m[PASS][0m 5.6  - Ensure ssh is not run within containers
[1;32m[PASS][0m 5.7  - Ensure privileged ports are not mapped within containers
[1;33m[NOTE][0m 5.8  - Ensure only needed ports are open on the container
[1;32m[PASS][0m 5.9  - Ensure the host's network namespace is not shared
[1;31m[WARN][0m 5.10 - Ensure memory usage for container is limited
[1;31m[WARN][0m      * Container running without memory restrictions: suspicious_neumann
[1;31m[WARN][0m      * Container running without memory restrictions: musing_aryabhata
[1;31m[WARN][0m      * Container running without memory restrictions: silly_saha
[1;31m[WARN][0m 5.11 - Ensure CPU priority is set appropriately on the container
[1;31m[WARN][0m      * Container running without CPU restrictions: suspicious_neumann
[1;31m[WARN][0m      * Container running without CPU restrictions: musing_aryabhata
[1;31m[WARN][0m      * Container running without CPU restrictions: silly_saha
[1;31m[WARN][0m 5.12 - Ensure the container's root filesystem is mounted as read only
[1;31m[WARN][0m      * Container running with root FS mounted R/W: suspicious_neumann
[1;31m[WARN][0m      * Container running with root FS mounted R/W: musing_aryabhata
[1;31m[WARN][0m      * Container running with root FS mounted R/W: silly_saha
[1;32m[PASS][0m 5.13 -  Ensure incoming container traffic is binded to a specific host interface
[1;31m[WARN][0m 5.14 - Ensure 'on-failure' container restart policy is set to '5'
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: suspicious_neumann
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: musing_aryabhata
[1;31m[WARN][0m      * MaximumRetryCount is not set to 5: silly_saha
[1;32m[PASS][0m 5.15 - Ensure the host's process namespace is not shared
[1;32m[PASS][0m 5.16 - Ensure the host's IPC namespace is not shared
[1;32m[PASS][0m 5.17 - Ensure host devices are not directly exposed to containers
[1;34m[INFO][0m 5.18 - Ensure the default ulimit is overwritten at runtime, only if needed
[1;34m[INFO][0m      * Container no default ulimit override: suspicious_neumann
[1;34m[INFO][0m      * Container no default ulimit override: musing_aryabhata
[1;34m[INFO][0m      * Container no default ulimit override: silly_saha
[1;32m[PASS][0m 5.19 - Ensure mount propagation mode is not set to shared
[1;32m[PASS][0m 5.20 - Ensure the host's UTS namespace is not shared
[1;32m[PASS][0m 5.21 - Ensure the default seccomp profile is not Disabled
[1;33m[NOTE][0m 5.22 - Ensure docker exec commands are not used with privileged option
[1;33m[NOTE][0m 5.23 - Ensure docker exec commands are not used with user option
[1;32m[PASS][0m 5.24 - Ensure cgroup usage is confirmed
[1;31m[WARN][0m 5.25 - Ensure the container is restricted from acquiring additional privileges
[1;31m[WARN][0m      * Privileges not restricted: suspicious_neumann
[1;31m[WARN][0m      * Privileges not restricted: musing_aryabhata
[1;31m[WARN][0m      * Privileges not restricted: silly_saha
[1;31m[WARN][0m 5.26 - Ensure container health is checked at runtime
[1;31m[WARN][0m      * Health check not set: suspicious_neumann
[1;31m[WARN][0m      * Health check not set: musing_aryabhata
[1;31m[WARN][0m      * Health check not set: silly_saha
[1;34m[INFO][0m 5.27 - Ensure docker commands always get the latest version of the image
[1;31m[WARN][0m 5.28 - Ensure PIDs cgroup limit is used
[1;31m[WARN][0m      * PIDs limit not set: suspicious_neumann
[1;31m[WARN][0m      * PIDs limit not set: musing_aryabhata
[1;31m[WARN][0m      * PIDs limit not set: silly_saha
[1;34m[INFO][0m 5.29 - Ensure Docker's default bridge docker0 is not used
[1;34m[INFO][0m      * Container in docker0 network: musing_aryabhata
[1;34m[INFO][0m      * Container in docker0 network: suspicious_neumann
[1;34m[INFO][0m      * Container in docker0 network: silly_saha
[1;32m[PASS][0m 5.30 - Ensure the host's user namespaces is not shared
[1;32m[PASS][0m 5.31 - Ensure the Docker socket is not mounted inside any containers


[1;34m[INFO][0m 6 - Docker Security Operations
[1;34m[INFO][0m 6.1  - Avoid image sprawl
[1;34m[INFO][0m      * There are currently: 4 images
[1;34m[INFO][0m 6.2  - Avoid container sprawl
[1;34m[INFO][0m      * There are currently a total of 9 containers, with 3 of them currently running


[1;34m[INFO][0m 7 - Docker Swarm Configuration
[1;32m[PASS][0m 7.1  - Ensure swarm mode is not Enabled, if not needed
[1;32m[PASS][0m 7.2  - Ensure the minimum number of manager nodes have been created in a swarm (Swarm mode not enabled)
[1;32m[PASS][0m 7.3  - Ensure swarm services are binded to a specific host interface (Swarm mode not enabled)
[1;32m[PASS][0m 7.5  - Ensure Docker's secret management commands are used for managing secrets in a Swarm cluster (Swarm mode not enabled)
[1;32m[PASS][0m 7.6  - Ensure swarm manager is run in auto-lock mode (Swarm mode not enabled)
[1;32m[PASS][0m 7.7  - Ensure swarm manager auto-lock key is rotated periodically (Swarm mode not enabled)
[1;32m[PASS][0m 7.8  - Ensure node certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.9  - Ensure CA certificates are rotated as appropriate (Swarm mode not enabled)
[1;32m[PASS][0m 7.10 - Ensure management plane traffic has been separated from data plane traffic (Swarm mode not enabled)
[1;34m[INFO][0m Checks: 125
[1;34m[INFO][0m Score: 16
